name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
    - name: Setup docker buildx
      uses: docker/setup-buildx-action@v3
    - name: Docker login
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    - name: Docker build and push
      uses: docker/bake-action@v4
      with:
        push: true
        set: target.args.build_number=${{ github.run_number }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Install sshpass
        run: sudo apt-get install sshpass
      - name: Copy docker-compose
        run: sshpass -v -p ${{ secrets.SERVER_PASS }} scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SERVER_LOGIN }}@${{ secrets.SERVER_HOST }}:~/easysocks/

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_LOGIN }}
          password: ${{ secrets.SERVER_PASS }}
          script: |
            cd ~/easysocks/
            docker-compose down
            docker-compose pull
            docker-compose up


